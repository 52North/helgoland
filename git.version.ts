import fs = require('fs');
import { combineLatest, Observable } from 'rxjs';

const exec = require('child_process').exec;

const revisionObs = new Observable<string>(s => {
    exec('git rev-parse HEAD',
        function (error: Error, stdout: Buffer, stderr: Buffer) {
            if (error !== null) {
                console.log('git error: ' + error + stderr);
            }
            s.next(stdout.toString().trim());
            s.complete();
        });
});

const branchObs = new Observable<string>(s => {
    exec('git rev-parse --abbrev-ref HEAD',
        function (error: Error, stdout: Buffer, stderr: Buffer) {
            if (error !== null) {
                console.log('git error: ' + error + stderr);
            }
            s.next(stdout.toString().trim());
            s.complete();
        });
});

const toolboxVersion = require('./package.json').dependencies['@helgoland/core'];

combineLatest(revisionObs, branchObs)
    .subscribe(([revision, branch]) => {
        // tslint:disable-next-line:max-line-length
        console.log(`version: '${process.env.npm_package_version}', toolbox: '${toolboxVersion}', revision: '${revision}', branch: '${branch}'`);
        const content = '// this file is automatically generated by git.version.ts script\n' +
            `export const versions = {
    version: '${process.env.npm_package_version}',
    toolbox: '${toolboxVersion}',
    revision: '${revision}',
    branch: '${branch}'
};
`;
        fs.mkdirSync('src/environments', {recursive: true, mode: 0o755});

        fs.writeFileSync(
            'src/environments/versions.ts',
            content,
            { encoding: 'utf8' }
        );
    });
